---
import BaseHead from 'src/components/BaseHead.astro'
import Header from '../components/Header.astro'
import prisma from 'src/lib/prisma'
import DisplayBookmarks from 'src/components/DisplayBookmarks'
import { Bookmarks, Folders } from '@prisma/client'
import { setCache } from 'src/lib/cache'

setCache(Astro.response, 12 * 60 * 60)

const title = "Geek's Resources"
const desc = "Treasure's I've hunted over the years."

const [bookmarks, folders] = await Promise.all([
  prisma.bookmarks.findMany({
    orderBy: { createdAt: 'desc' },
    include: { folder: false }
  }),
  prisma.folders.findMany()
])

let initialFolder = ''

const bookmarksByFolder: Record<string, Bookmarks[]> = {}

bookmarks.forEach((item) => {
  if (item.folderId) {
    if (bookmarksByFolder[item.folderId])
      bookmarksByFolder[item.folderId].push(item)
    else bookmarksByFolder[item.folderId] = [item]
  }
})

const foldersById: Record<string, Folders> = {}
const foldersByParent: Record<string, string[]> = {}

folders.forEach((item) => {
  foldersById[item.id] = item

  if (item.parentId) {
    if (foldersByParent[item.parentId])
      foldersByParent[item.parentId].push(item.id)
    else foldersByParent[item.parentId] = [item.id]
  }

  if (item.name === 'Bookmarks bar') initialFolder = item.id
})
---

<!DOCTYPE html>
<html lang="en-us">
  <head>
    <BaseHead title={title} description={desc} />
  </head>
  <body>
    <Header />
    <main>
      <h1>{title}</h1>

      <p>{desc}</p>

      <DisplayBookmarks
        initialFolder={initialFolder}
        folders={foldersById}
        foldersByParent={foldersByParent}
        bookmarksByFolder={bookmarksByFolder}
        client:load
      />
    </main>
  </body>
</html>
