---
import prisma from 'src/lib/prisma'
import DisplayBookmarks from 'src/components/DisplayBookmarks'
import { Bookmarks, Folders } from '@prisma/client'
import { setCache } from 'src/lib/cache'
import PageLayout from 'src/layouts/PageLayout.astro'

setCache(Astro.response, 1 * 60 * 60)

const title = "Geek's Resources"
const desc = "Treasure's I've hunted over the years."

const [bookmarks, folders] = await Promise.all([
  prisma.bookmarks.findMany({
    orderBy: { createdAt: 'desc' },
    include: { folder: false }
  }),
  prisma.folders.findMany()
])

let initialFolder = ''

const bookmarksByFolder: Record<string, Bookmarks[]> = {}

bookmarks.forEach((item) => {
  if (item.folderId) {
    if (bookmarksByFolder[item.folderId])
      bookmarksByFolder[item.folderId].push(item)
    else bookmarksByFolder[item.folderId] = [item]
  }
})

const foldersById: Record<string, Folders> = {}
const foldersByParent: Record<string, string[]> = {}

folders.forEach((item) => {
  foldersById[item.id] = item

  if (item.parentId) {
    if (foldersByParent[item.parentId])
      foldersByParent[item.parentId].push(item.id)
    else foldersByParent[item.parentId] = [item.id]
  }

  if (item.name === 'Bookmarks bar') initialFolder = item.id
})
---

<PageLayout title={title} description={desc}>
  <h1>{title}</h1>

  <p>{desc}</p>

  <DisplayBookmarks
    initialFolder={initialFolder}
    folders={foldersById}
    foldersByParent={foldersByParent}
    bookmarksByFolder={bookmarksByFolder}
    client:load
  />
</PageLayout>
